---
const jobs = [
  {
    id: "EXY-556",
    title: "AI Engineer",
    location: "Remote / India",
    type: "Full Time",
    description:
      "Design, build, and deploy AI models and automation solutions for enterprise clients.",
    requirements: [
      "2+ years experience in AI/ML",
      "Proficiency in Python or JavaScript",
      "Experience with cloud platforms (AWS, Azure, GCP)",
    ],
  },
  {
    id: "EXY-565",
    title: "Frontend Developer",
    location: "Remote / India",
    type: "Full Time",
    description: "Develop modern, responsive UIs for our SaaS and AI products.",
    requirements: [
      "2+ years experience with React or Vue",
      "Strong CSS/HTML skills",
      "Experience with REST APIs",
    ],
  },
  {
    id: "EXY-576",
    title: "Product Manager (AI SaaS)",
    location: "Remote / India",
    type: "Full Time",
    description:
      "Lead product strategy and execution for our AI SaaS platforms.",
    requirements: [
      "3+ years in product management",
      "Experience with SaaS products",
      "Strong communication skills",
    ],
  },
  {
    id: "EXY-579",
    title: "DevOps Engineer",
    location: "Remote / India",
    type: "Full Time",
    description:
      "Automate deployment pipelines and ensure high availability for our cloud infrastructure.",
    requirements: [
      "2+ years experience in DevOps",
      "Experience with CI/CD tools",
      "Knowledge of Docker & Kubernetes",
    ],
  },
  {
    id: "EXY-590",
    title: "UI/UX Designer",
    location: "Remote / India",
    type: "Full Time",
    description:
      "Design intuitive, beautiful interfaces for web and mobile products.",
    requirements: [
      "2+ years experience in UI/UX design",
      "Proficiency with Figma or Adobe XD",
      "Strong portfolio of design work",
    ],
  },
  {
    id: "EXY-600",
    title: "Technical Content Writer",
    location: "Remote / India",
    type: "Part Time",
    description:
      "Create engaging technical content, blogs, and documentation for our products.",
    requirements: [
      "Excellent written English",
      "Experience writing about technology",
      "Ability to explain complex topics simply",
    ],
  },
];
---

<section class="w-full bg-gradient-to-br from-blue-100 via-blue-50 to-teal-200 py-16 px-2">
  <div class="max-w-7xl mx-auto">
    <h2 class="text-3xl font-bold text-[#0071e3] mb-4 text-center">
      Open Positions
    </h2>
    <p class="text-lg text-gray-700 mb-10 text-center">
      Weâ€™re looking for passionate, talented people to help us build innovative
      solutions for businesses worldwide.
    </p>

    <!-- Search and Filters -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8">
      <input
        id="job-search"
        type="text"
        placeholder="Search jobs by title or description..."
        class="w-full md:w-1/3 px-4 py-2 rounded border border-gray-300 focus:ring-2 focus:ring-[#0071e3] outline-none transition"
      />
      <div class="flex gap-3 flex-wrap">
        <select id="job-type-filter" class="px-3 py-2 rounded border border-gray-300 focus:ring-2 focus:ring-[#0071e3] outline-none transition">
          <option value="">All Types</option>
          <option value="Full Time">Full Time</option>
          <option value="Part Time">Part Time</option>
        </select>
        <select id="job-location-filter" class="px-3 py-2 rounded border border-gray-300 focus:ring-2 focus:ring-[#0071e3] outline-none transition">
          <option value="">All Locations</option>
          <option value="Remote / India">Remote / India</option>
        </select>
      </div>
    </div>

    <div
      class="grid gap-8 mb-16 w-full px-2 md:px-8"
      id="job-list"
    >
      {
        jobs.map((job, idx) => (
          <div
            class="bg-white rounded-xl shadow p-6 opacity-0 translate-y-8 transition-all duration-500"
            style={`transition-delay: ${idx * 80}ms`}
            data-title={job.title.toLowerCase()}
            data-description={job.description.toLowerCase()}
            data-type={job.type}
            data-location={job.location}
          >
            {/* Job ID at the top */}
            <div class="mb-2">
              <span class="inline-block text-xs font-bold bg-blue-100 text-blue-700 px-3 py-1 rounded-full tracking-widest">
                {job.id}
              </span>
            </div>
            <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-2">
              <h2 class="text-2xl font-semibold text-[#0071e3]">{job.title}</h2>
              <span class="text-sm text-gray-500">
                {job.location} &middot; {job.type}
              </span>
            </div>
            <p class="text-gray-700 mb-2">{job.description}</p>
            {/* Skills as tags */}
            <div class="flex flex-wrap gap-2 mb-4">
              {job.requirements.map((req) => (
                <span class="inline-block bg-blue-50 text-blue-700 text-xs px-3 py-1 rounded-full">{req}</span>
              ))}
            </div>
            <a
              href="#apply-now-form"
              onclick="document.getElementById('apply-now-form')?.scrollIntoView({ behavior: 'smooth', block: 'start' }); return false;"
              class="inline-block bg-[#0071e3] text-white font-semibold px-6 py-2 rounded-[10px] shadow hover:bg-[#005bb5] transition"
            >
              Apply Now
            </a>
          </div>
        ))
      }
      <div id="no-jobs-message" class="hidden col-span-full text-center text-lg text-gray-500 py-12">
        No job available as per selected filter.
      </div>
    </div>
  </div>
</section>

<script is:inline>
  // Animate job cards on scroll into view
  document.addEventListener("DOMContentLoaded", function () {
    const cards = document.querySelectorAll("#job-list > div:not(#no-jobs-message)");
    const noJobsMsg = document.getElementById("no-jobs-message");
    const reveal = () => {
      cards.forEach((card) => {
        const rect = card.getBoundingClientRect();
        if (rect.top < window.innerHeight - 60) {
          card.classList.add("opacity-100", "translate-y-0");
        }
      });
    };
    reveal();
    window.addEventListener("scroll", reveal, { passive: true });
    document
      .getElementById("job-list")
      .addEventListener("scroll", reveal, { passive: true });

    // Search and filter logic
    const searchInput = document.getElementById("job-search");
    const typeFilter = document.getElementById("job-type-filter");
    const locationFilter = document.getElementById("job-location-filter");

    function filterJobs() {
      const search = searchInput.value.toLowerCase();
      const type = typeFilter.value;
      const location = locationFilter.value;
      let visibleCount = 0;
      cards.forEach(card => {
        const title = card.getAttribute("data-title");
        const desc = card.getAttribute("data-description");
        const cardType = card.getAttribute("data-type");
        const cardLocation = card.getAttribute("data-location");
        const matchesSearch = title.includes(search) || desc.includes(search);
        const matchesType = !type || cardType === type;
        const matchesLocation = !location || cardLocation === location;
        if (matchesSearch && matchesType && matchesLocation) {
          card.style.display = "";
          visibleCount++;
        } else {
          card.style.display = "none";
        }
      });
      if (noJobsMsg) {
        noJobsMsg.style.display = visibleCount === 0 ? "" : "none";
      }
    }

    searchInput.addEventListener("input", filterJobs);
    typeFilter.addEventListener("change", filterJobs);
    locationFilter.addEventListener("change", filterJobs);

    // Initial filter to handle empty state on load
    filterJobs();
  });
</script>
