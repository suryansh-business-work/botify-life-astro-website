---
import { menuData } from "./data/menu-data";
---

<div>
  <div id="mobile-menu" class="lg:hidden fixed inset-0 z-200 hidden">
    <!-- Backdrop -->
    <div id="mobile-menu-backdrop" class="absolute inset-0 bg-black/30"></div>
    <div
      class="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white p-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10"
    >
      <div class="flex items-center justify-between">
        <a href="#" class="-m-1.5 p-1.5">
          <span class="sr-only">Botify.life</span>
          <img
            src="./botify-logo-dark.svg"
            alt="Botify Life Logo"
            class="h-10 mr-3"
            style="width: 120px;"
          />
        </a>
        <button
          id="mobile-menu-close"
          type="button"
          class="cursor-pointer -m-2.5 rounded-md p-2.5 text-gray-700"
        >
          <span class="sr-only">Close menu</span>
          <svg
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
            data-slot="icon"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18 18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-gray-500/10">
          <div class="space-y-2 py-6">
            {menuData.map((item, idx) => item.children ? (
              <div>
                <button
                  type="button"
                  class="items-center cursor-pointer flex w-full rounded-lg py-2 pr-3.5 pl-3 text-base/7 font-semibold text-gray-900 hover:bg-gray-50"
                  aria-controls={`submenu-${idx}`}
                  aria-expanded="false"
                  id={`submenu-toggle-${idx}`}
                >
                  {item.icon && <i class={item.icon + " mr-2"}></i>}
                  {item.name}
                  <svg
                    class="size-5 flex-none transition-transform"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                    data-slot="icon"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z"
                      clip-rule="evenodd"></path>
                  </svg>
                </button>
                <div class="mt-2 space-y-2 hidden" id={`submenu-${idx}`}>
                  {item.children.map(child => (
                    <a
                      href={child.href}
                      class="cursor-pointer block rounded-lg py-2 pr-3 pl-6 text-sm/7 font-semibold text-gray-900 hover:bg-gray-200 hover:w-full hover:no-underline hover:no-underline"
                      style="display: block;"
                    >
                      {child.icon && <i class={child.icon + " mr-2"}></i>}
                      {child.name}
                    </a>
                  ))}
                </div>
              </div>
            ) : (
              <a
                href={item.href}
                class="block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50 no-underline hover:no-underline"
              >
                {item.icon && <i class={item.icon + " mr-2"}></i>}
                {item.name}
              </a>
            ))}
          </div>
          <div class="py-6">
            <a
              href="https://app.botify.life/login"
              class="block rounded-lg px-3 py-2.5 text-base/7 font-semibold text-gray-900 hover:bg-gray-50 no-underline hover:no-underline"
            >Log in</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.getElementById("mobile-menu");
    const openBtn = document.getElementById("mobile-menu-open");
    const closeBtn = document.getElementById("mobile-menu-close");
    const backdrop = document.getElementById("mobile-menu-backdrop");

    if (openBtn && menu) {
      openBtn.addEventListener("click", () => {
        menu.classList.remove("hidden");
      });
    }
    if (closeBtn && menu) {
      closeBtn.addEventListener("click", () => {
        menu.classList.add("hidden");
      });
    }
    if (backdrop && menu) {
      backdrop.addEventListener("click", () => {
        menu.classList.add("hidden");
      });
    }

    // Submenu open/close logic
    document.querySelectorAll('[id^="submenu-toggle-"]').forEach((btn) => {
      btn.addEventListener("click", function () {
        const idx = this.id.replace("submenu-toggle-", "");
        const submenu = document.getElementById(`submenu-${idx}`);
        const expanded = this.getAttribute("aria-expanded") === "true";
        this.setAttribute("aria-expanded", !expanded);
        submenu.classList.toggle("hidden");
        // Rotate arrow
        const arrow = this.querySelector("svg");
        if (arrow) arrow.classList.toggle("rotate-180");
      });
    });
  });
</script>
